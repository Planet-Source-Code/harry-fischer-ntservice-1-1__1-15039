// Ntsvc.odl : type library source for ActiveX Control project.

// This file will be processed by the Make Type Library (mktyplib) tool to
// produce the type library (Ntsvc.tlb) that will become a resource in
// Ntsvc.ocx.

#include <olectl.h>
#include <idispids.h>

[ uuid(C32049A2-E8D3-11D4-9D82-00D0B73B61A4), version(1.0),
  helpfile("Ntsvc.hlp"),
  helpstring("Microsoft NT Service Control"),
  control ]
library NTService
{
	importlib(STDOLE_TLB);
	importlib(STDTYPE_TLB);


	typedef [uuid(4B528380-9E0E-11cf-9221-18467D6C0000),
		helpstring("Service Start Mode") ] 
	enum { 
		[helpstring("Automatic")] svcStartAutomatic = 2, 
		[helpstring("Manual")] svcStartManual = 3,
		[helpstring("Disabled")] svcStartDisabled = 4
	} SvcStartMode; 

	typedef [uuid(4B528381-9E0E-11cf-9221-18467D6C0000),
		helpstring("Service State") ] 
	enum { 
		[helpstring("Stopped")] svcStopped = 1,
		[helpstring("Start Pending")] svcStartPending = 2,
		[helpstring("Stop Pending")] svcStopPending = 3,
		[helpstring("Running")] svcRunning = 4,
		[helpstring("Continue Pending")] svcContinuePending = 5,
		[helpstring("Pause Pending")] svcPausePending = 6,
		[helpstring("Paused")] svcPaused = 7
	} SvcState;

	typedef [uuid(4B528382-9E0E-11cf-9221-18467D6C0000),
		helpstring("Controls Accepted") ] 
	enum { 
		[helpstring("Stop")] svcCtrlStop = 1, 
		[helpstring("PauseContinue")] svcCtrlPauseContinue = 2,
		[helpstring("Shutdown")] svcCtrlShutdown = 4,
		[helpstring("ParamChange")] svcCtrlParamChange = 8,
		[helpstring("NetbindChange")] svcCtrlNetbindChange = 16
	} SvcControls; 

	typedef [uuid(4B528383-9E0E-11cf-9221-18467D6C0000),
		helpstring("Event Types") ] 
	enum {
		[helpstring("Event Success")] svcEventSuccess = 0x0000,
		[helpstring("Event Error")] svcEventError = 0x0001,
		[helpstring("Event Warning")] svcEventWarning = 0x0002,
		[helpstring("Event Information")] svcEventInformation = 0x0004,
		[helpstring("Event AuditSuccess")] svcEventAuditSuccess = 0x0008,
		[helpstring("Event AuditFailure")] svcEventAuditFailure = 0x0010
	} SvcEventType;

	typedef [uuid(4B528384-9E0E-11cf-9221-18467D6C0000),
		helpstring("Service Events") ] 
	enum {
		[helpstring("Message Debug")] svcMessageDebug = 0x0000006C,
		[helpstring("Message Error")] svcMessageError = 0x0000006D,
		[helpstring("Message Info")] svcMessageInfo = 0x0000006E
	} SvcEventId;


	//  Primary dispatch interface for CNtsvcCtrl

	[ uuid(C32049A3-E8D3-11D4-9D82-00D0B73B61A4),
	  helpstring("Dispatch interface for NTService Control"), hidden ]
	dispinterface _DNtsvc
	{
		properties:
			// NOTE - ClassWizard will maintain property information here.
			//    Use extreme caution when editing this section.
			//{{AFX_ODL_PROP(CNtsvcCtrl)
			[id(1)] BSTR Account;
			[id(2)] long ControlsAccepted;
			[id(9)] boolean Debug;
			[id(3)] BSTR LoadOrderGroup;
			[id(4)] BSTR Dependencies;
			[id(5)] BSTR DisplayName;
			[id(6)] boolean Interactive;
			[id(7)] BSTR Password;
			[id(10)] BSTR ServiceName;
			[id(11)] SvcStartMode StartMode;
			[id(0)] BSTR _DisplayName;
			[id(8)] long WaitHint;
			//}}AFX_ODL_PROP

		methods:
			// NOTE - ClassWizard will maintain method information here.
			//    Use extreme caution when editing this section.
			//{{AFX_ODL_METHOD(CNtsvcCtrl)
			[id(20)] void DeleteSetting(BSTR section, [optional] VARIANT key);
			[id(18)] VARIANT GetAllSettings(BSTR section);
			[id(21)] BSTR GetSetting(BSTR section, BSTR key, [optional] VARIANT vdefault);
			[id(12)] boolean Install();
			[id(13)] boolean LogEvent(short EventType, long ID, BSTR Message);
			[id(14)] boolean Running();
			[id(19)] void SaveSetting(BSTR section, BSTR key, BSTR setting);
			[id(17)] boolean StartService();
			[id(16)] void StopService();
			[id(15)] boolean Uninstall();
			[id(22)] void ReportStatus();
			[id(23)] long GetServiceStatusHandle();
			//}}AFX_ODL_METHOD

			[id(DISPID_ABOUTBOX)] void AboutBox();
	};

	//  Event dispatch interface for CNtsvcCtrl

	[ uuid(C32049A4-E8D3-11D4-9D82-00D0B73B61A4),
	  helpstring("Event interface for NTService Control") ]
	dispinterface _DNtsvcEvents
	{
		properties:
			//  Event interface has no properties

		methods:
			// NOTE - ClassWizard will maintain event information here.
			//    Use extreme caution when editing this section.
			//{{AFX_ODL_EVENT(CNtsvcCtrl)
			[id(3)] void Continue(boolean* Success);
			[id(5)] void Control(long lEvent);
			[id(2)] void Pause(boolean* Success);
			[id(4)] void Start(boolean* Success);
			[id(1)] void Stop();
			//}}AFX_ODL_EVENT
	};

	//  Class information for CNtsvcCtrl

	[ uuid(C32049A5-E8D3-11D4-9D82-00D0B73B61A4),
	  helpstring("Microsoft NT Service Control"), control ]
	coclass NTService
	{
		[default] dispinterface _DNtsvc;
		[default, source] dispinterface _DNtsvcEvents;
	};

	//}}AFX_APPEND_ODL}}
};
